'use strict';

var model = {};
var initialized = false;

function init(sequelize) {
    delete module.exports.init; // Destroy itself to prevent repeated calls and clash with a model named 'init'.
    initialized = true;
    model.sequelize = sequelize;
    // Import model files and assign them to `model` object.
    model.ActivityEventTypeDump = sequelize.import('./definition/activity-event-type-dump.js');
    model.AppointmentClientConfiguration = sequelize.import('./definition/appointment-client-configuration.js');
    model.BreakType = sequelize.import('./definition/break-type.js');
    model.CalendarAppointment = sequelize.import('./definition/calendar-appointment.js');
    model.CalendarAppointmentAttendee = sequelize.import('./definition/calendar-appointment-attendee.js');
    model.CheckList = sequelize.import('./definition/check-list.js');
    model.CheckListCheckListItemRelationship = sequelize.import('./definition/check-list-check-list-item-relationship.js');
    model.CheckListItem = sequelize.import('./definition/check-list-item.js');
    model.Communication = sequelize.import('./definition/communication.js');
    model.CommunicationEntity = sequelize.import('./definition/communication-entity.js');
    model.CommunicationEntityType = sequelize.import('./definition/communication-entity-type.js');
    model.CommunicationPriority = sequelize.import('./definition/communication-priority.js');
    model.CommunicationType = sequelize.import('./definition/communication-type.js');
    model.ComplaintCategory = sequelize.import('./definition/complaint-category.js');
    model.ComplaintEDROrganisation = sequelize.import('./definition/complaint-e-d-r-organisation.js');
    model.ComplaintLoanType = sequelize.import('./definition/complaint-loan-type.js');
    model.ComplaintStatus = sequelize.import('./definition/complaint-status.js');
    model.ComplaintType = sequelize.import('./definition/complaint-type.js');
    model.Department = sequelize.import('./definition/department.js');
    model.DepartmentFitsChangeDriverSet = sequelize.import('./definition/department-fits-change-driver-set.js');
    model.EventType = sequelize.import('./definition/event-type.js');
    model.ExpenseCategoryType = sequelize.import('./definition/expense-category-type.js');
    model.FilterOperator = sequelize.import('./definition/filter-operator.js');
    model.FitsCategoryType = sequelize.import('./definition/fits-category-type.js');
    model.FitsChangeDriverSet = sequelize.import('./definition/fits-change-driver-set.js');
    model.FitsChangeDriverSetFitsChangeDriverType = sequelize.import('./definition/fits-change-driver-set-fits-change-driver-type.js');
    model.FitsChangeDriverType = sequelize.import('./definition/fits-change-driver-type.js');
    model.FitsPriority = sequelize.import('./definition/fits-priority.js');
    model.FitsProjectType = sequelize.import('./definition/fits-project-type.js');
    model.FitsWorkType = sequelize.import('./definition/fits-work-type.js');
    model.JobLock = sequelize.import('./definition/job-lock.js');
    model.JobStatus = sequelize.import('./definition/job-status.js');
    model.JobStatusPartition = sequelize.import('./definition/job-status-partition.js');
    model.JobType = sequelize.import('./definition/job-type.js');
    model.JobTypeDefault = sequelize.import('./definition/job-type-default.js');
    model.JobTypeDepartment = sequelize.import('./definition/job-type-department.js');
    model.JobTypeDepartmentFilter = sequelize.import('./definition/job-type-department-filter.js');
    model.JobTypeFollowUp = sequelize.import('./definition/job-type-follow-up.js');
    model.JobTypeGate = sequelize.import('./definition/job-type-gate.js');
    model.JobTypeOffice = sequelize.import('./definition/job-type-office.js');
    model.JobTypeReasonableExpectancy = sequelize.import('./definition/job-type-reasonable-expectancy.js');
    model.JobTypeStage = sequelize.import('./definition/job-type-stage.js');
    model.JobTypeTrait = sequelize.import('./definition/job-type-trait.js');
    model.JobTypeTriggerPoint = sequelize.import('./definition/job-type-trigger-point.js');
    model.JobTypeUserQA = sequelize.import('./definition/job-type-user-q-a.js');
    model.LmtcConfiguration = sequelize.import('./definition/lmtc-configuration.js');
    model.LmtcConfigurationType = sequelize.import('./definition/lmtc-configuration-type.js');
    model.LmtcHoldConfiguration = sequelize.import('./definition/lmtc-hold-configuration.js');
    model.News = sequelize.import('./definition/news.js');
    model.Office = sequelize.import('./definition/office.js');
    model.ProductManagerRequestType = sequelize.import('./definition/product-manager-request-type.js');
    model.PurchaseOrderCompany = sequelize.import('./definition/purchase-order-company.js');
    model.PurchaseOrderFormType = sequelize.import('./definition/purchase-order-form-type.js');
    model.QADepartmentJobType = sequelize.import('./definition/q-a-department-job-type.js');
    model.QAType = sequelize.import('./definition/q-a-type.js');
    model.RefundRequestPaymentMethod = sequelize.import('./definition/refund-request-payment-method.js');
    model.RefundRequestWriteOffType = sequelize.import('./definition/refund-request-write-off-type.js');
    model.Role = sequelize.import('./definition/role.js');
    model.RowStatusType = sequelize.import('./definition/row-status-type.js');
    model.Stage = sequelize.import('./definition/stage.js');
    model.TemplateCategory = sequelize.import('./definition/template-category.js');
    model.TemplateType = sequelize.import('./definition/template-type.js');
    model.TimeZone = sequelize.import('./definition/time-zone.js');
    model.TrafficLightDashboardApplicationGestationCycle = sequelize.import('./definition/traffic-light-dashboard-application-gestation-cycle.js');
    model.TrafficLightDashboardFlaggedApplicationRuleType = sequelize.import('./definition/traffic-light-dashboard-flagged-application-rule-type.js');
    model.TrafficLightDashboardFlaggedApplication = sequelize.import('./definition/traffic-light-dashboard-flagged-applications.js');
    model.TrafficLightDashboardProgressSLA = sequelize.import('./definition/traffic-light-dashboard-progress-s-l-a.js');
    model.TrafficLightDashboardProgressSLAType = sequelize.import('./definition/traffic-light-dashboard-progress-s-l-a-type.js');
    model.TrafficLightDashboardPushedSLA = sequelize.import('./definition/traffic-light-dashboard-pushed-s-l-a.js');
    model.TrafficLightDashboardPushSLAReason = sequelize.import('./definition/traffic-light-dashboard-push-s-l-a-reason.js');
    model.TrafficLightDashboardPushSLAType = sequelize.import('./definition/traffic-light-dashboard-push-s-l-a-type.js');
    model.Trait = sequelize.import('./definition/trait.js');
    model.TraxUserWorkTimeDetail = sequelize.import('./definition/trax-user-work-time-detail.js');
    model.TraxWaitingRoom = sequelize.import('./definition/trax-waiting-room.js');
    model.TraxWaitingRoomCall = sequelize.import('./definition/trax-waiting-room-call.js');
    model.TriggerPoint = sequelize.import('./definition/trigger-point.js');
    model.TriggerQuery = sequelize.import('./definition/trigger-query.js');
    model.TriggerScreen = sequelize.import('./definition/trigger-screen.js');
    model.TriggerScreenTask = sequelize.import('./definition/trigger-screen-task.js');
    model.TriggerSqlTask = sequelize.import('./definition/trigger-sql-task.js');
    model.TriggerUri = sequelize.import('./definition/trigger-uri.js');
    model.TriggerWebTask = sequelize.import('./definition/trigger-web-task.js');
    model.User = sequelize.import('./definition/user.js');
    model.UserDepartment = sequelize.import('./definition/user-department.js');
    model.UserOffice = sequelize.import('./definition/user-office.js');
    model.WrapUpTemplate = sequelize.import('./definition/wrap-up-template.js');
    model.WrapUpTemplateValue = sequelize.import('./definition/wrap-up-template-value.js');
    model.WrapUpValue = sequelize.import('./definition/wrap-up-value.js');

    // All models are initialized. Now connect them with relations.
    require('./definition/activity-event-type-dump.js').initRelations();
    require('./definition/appointment-client-configuration.js').initRelations();
    require('./definition/break-type.js').initRelations();
    require('./definition/calendar-appointment.js').initRelations();
    require('./definition/calendar-appointment-attendee.js').initRelations();
    require('./definition/check-list.js').initRelations();
    require('./definition/check-list-check-list-item-relationship.js').initRelations();
    require('./definition/check-list-item.js').initRelations();
    require('./definition/communication.js').initRelations();
    require('./definition/communication-entity.js').initRelations();
    require('./definition/communication-entity-type.js').initRelations();
    require('./definition/communication-priority.js').initRelations();
    require('./definition/communication-type.js').initRelations();
    require('./definition/complaint-category.js').initRelations();
    require('./definition/complaint-e-d-r-organisation.js').initRelations();
    require('./definition/complaint-loan-type.js').initRelations();
    require('./definition/complaint-status.js').initRelations();
    require('./definition/complaint-type.js').initRelations();
    require('./definition/department.js').initRelations();
    require('./definition/department-fits-change-driver-set.js').initRelations();
    require('./definition/event-type.js').initRelations();
    require('./definition/expense-category-type.js').initRelations();
    require('./definition/filter-operator.js').initRelations();
    require('./definition/fits-category-type.js').initRelations();
    require('./definition/fits-change-driver-set.js').initRelations();
    require('./definition/fits-change-driver-set-fits-change-driver-type.js').initRelations();
    require('./definition/fits-change-driver-type.js').initRelations();
    require('./definition/fits-priority.js').initRelations();
    require('./definition/fits-project-type.js').initRelations();
    require('./definition/fits-work-type.js').initRelations();
    require('./definition/job-lock.js').initRelations();
    require('./definition/job-status.js').initRelations();
    require('./definition/job-status-partition.js').initRelations();
    require('./definition/job-type.js').initRelations();
    require('./definition/job-type-default.js').initRelations();
    require('./definition/job-type-department.js').initRelations();
    require('./definition/job-type-department-filter.js').initRelations();
    require('./definition/job-type-follow-up.js').initRelations();
    require('./definition/job-type-gate.js').initRelations();
    require('./definition/job-type-office.js').initRelations();
    require('./definition/job-type-reasonable-expectancy.js').initRelations();
    require('./definition/job-type-stage.js').initRelations();
    require('./definition/job-type-trait.js').initRelations();
    require('./definition/job-type-trigger-point.js').initRelations();
    require('./definition/job-type-user-q-a.js').initRelations();
    require('./definition/lmtc-configuration.js').initRelations();
    require('./definition/lmtc-configuration-type.js').initRelations();
    require('./definition/lmtc-hold-configuration.js').initRelations();
    require('./definition/news.js').initRelations();
    require('./definition/office.js').initRelations();
    require('./definition/product-manager-request-type.js').initRelations();
    require('./definition/purchase-order-company.js').initRelations();
    require('./definition/purchase-order-form-type.js').initRelations();
    require('./definition/q-a-department-job-type.js').initRelations();
    require('./definition/q-a-type.js').initRelations();
    require('./definition/refund-request-payment-method.js').initRelations();
    require('./definition/refund-request-write-off-type.js').initRelations();
    require('./definition/role.js').initRelations();
    require('./definition/row-status-type.js').initRelations();
    require('./definition/stage.js').initRelations();
    require('./definition/template-category.js').initRelations();
    require('./definition/template-type.js').initRelations();
    require('./definition/time-zone.js').initRelations();
    require('./definition/traffic-light-dashboard-application-gestation-cycle.js').initRelations();
    require('./definition/traffic-light-dashboard-flagged-application-rule-type.js').initRelations();
    require('./definition/traffic-light-dashboard-flagged-applications.js').initRelations();
    require('./definition/traffic-light-dashboard-progress-s-l-a.js').initRelations();
    require('./definition/traffic-light-dashboard-progress-s-l-a-type.js').initRelations();
    require('./definition/traffic-light-dashboard-pushed-s-l-a.js').initRelations();
    require('./definition/traffic-light-dashboard-push-s-l-a-reason.js').initRelations();
    require('./definition/traffic-light-dashboard-push-s-l-a-type.js').initRelations();
    require('./definition/trait.js').initRelations();
    require('./definition/trax-user-work-time-detail.js').initRelations();
    require('./definition/trax-waiting-room.js').initRelations();
    require('./definition/trax-waiting-room-call.js').initRelations();
    require('./definition/trigger-point.js').initRelations();
    require('./definition/trigger-query.js').initRelations();
    require('./definition/trigger-screen.js').initRelations();
    require('./definition/trigger-screen-task.js').initRelations();
    require('./definition/trigger-sql-task.js').initRelations();
    require('./definition/trigger-uri.js').initRelations();
    require('./definition/trigger-web-task.js').initRelations();
    require('./definition/user.js').initRelations();
    require('./definition/user-department.js').initRelations();
    require('./definition/user-office.js').initRelations();
    require('./definition/wrap-up-template.js').initRelations();
    require('./definition/wrap-up-template-value.js').initRelations();
    require('./definition/wrap-up-value.js').initRelations();
    return model;
}

// Note: While using this module, DO NOT FORGET FIRST CALL model.init(sequelize). Otherwise you get undefined.
module.exports = model;
module.exports.init = init;
module.exports.isInitialized = initialized;
